{"name":"Sendgrid PHP SDK","tagline":"SendGrid PHP helper library.","body":"\r\n\r\nThis library allows you to quickly and easily send emails through SendGrid using PHP.\r\n\r\n```php\r\n$sendgrid = new SendGrid('username', 'password');\r\n$mail     = new SendGrid\\Mail();\r\n$mail->addTo('foo@bar.com')->\r\n       addTo('dude@bar.com')->\r\n       setFrom('me@bar.com')->\r\n       setSubject('Subject goes here')->\r\n       setText('Hello World!')->\r\n       setHtml('<strong>Hello World!</strong>');\r\n\r\n$sendgrid->smtp->send($mail);\r\n```\r\n\r\n## Installation\r\n\r\nThe following recommended installation requires [composer](http://getcomposer.org/). If you are unfamiliar with composer see the [composer installation instructions](http://getcomposer.org/doc/01-basic-usage.md#installation).\r\n\r\nAdd the following to your `composer.json` file:\r\n\r\n```json\r\n{  \r\n  \"require\": {\r\n    \"sendgrid/sendgrid\": \"~1.0.0\"\r\n  }\r\n}\r\n```\r\n\r\nInstall sendgrid-php and its dependencies:\r\n\r\n```bash\r\ncomposer install\r\n```\r\n\r\nLoad sendgrid-php and its dependencies into your project:\r\n\r\n```php\r\nrequire 'vendor/autoload.php';\r\n```\r\n\r\n### Alternative Installation\r\n\r\nIf you choose not to use composer you can do the following alternative installation using git:\r\n\r\n```bash\r\ngit clone https://github.com/sendgrid/sendgrid-php.git\r\n```\r\n\r\nThen require the autoloader from your php script:\r\n\r\n```php\r\nrequire '../path/to/sendgrid-php/SendGrid_loader.php';\r\n```\r\n\r\nFinally, install SwiftMailer using pear.\r\n\r\n```bash\r\npear channel-discover pear.swiftmailer.org\r\npear install swift/swift\r\n```\r\n\r\n*Note: If you do not plan on sending using SMTP, you can skip installation of swiftmailer.*\r\n\r\n## SendGrid APIs ##\r\n\r\nSendGrid provides two methods of sending email: the Web API, and SMTP API.  SendGrid recommends using the SMTP API for sending emails.\r\nFor an explanation of the benefits of each, refer to http://docs.sendgrid.com/documentation/get-started/integrate/examples/smtp-vs-rest/.\r\n\r\nThis library implements a common interface to make it very easy to use either API.\r\n\r\n## Pre-Usage ##\r\n\r\nBefore we begin using the library, its important to understand a few things about the library architecture...\r\n\r\n* The SendGrid Mail object is the means of setting mail data. In general, data can be set in three ways for most elements:\r\n  1. set - reset the data, and initialize it to the given element. This will destroy previous data\r\n  2. set (List) - for array based elements, we provide a way of passing the entire array in at once. This will also destroy previous data.\r\n  3. add - append data to the list of elements.\r\n\r\n* Sending an email is as simple as :\r\n  1. Creating a SendGrid Instance\r\n  1. Creating a SendGrid Mail object, and setting its data\r\n  1. Sending the mail using either SMTP API or Web API.\r\n\r\n## Usage\r\n\r\nTo begin using this library, initialize the SendGrid object with your SendGrid credentials.\r\n\r\n```php\r\n$sendgrid = new SendGrid('username', 'password');\r\n```\r\n\r\nCreate a new SendGrid Mail object and add your message details.\r\n\r\n```php\r\n$mail = new SendGrid\\Mail();\r\n$mail->addTo('foo@bar.com')->\r\n       setFrom('me@bar.com')->\r\n       setSubject('Subject goes here')->\r\n       setText('Hello World!')->\r\n       setHtml('<strong>Hello World!</strong>');\r\n```\r\n\r\nSend it using the API of your choice (SMTP or Web)\r\n\r\n```php\r\n$sendgrid->smtp->send($mail);\r\n```\r\nOr \r\n\r\n```php\r\n$sendgrid->web->send($mail);\r\n```\r\n\r\n### Categories ###\r\n\r\nCategories are used to group email statistics provided by SendGrid.\r\n\r\nTo use a category, simply set the category name.  Note: there is a maximum of 10 categories per email.\r\n\r\n```php\r\n$mail = new SendGrid\\Mail();\r\n$mail->addTo('foo@bar.com')->\r\n       ...\r\n       addCategory(\"Category 1\")->\r\n       addCategory(\"Category 2\");\r\n```\r\n\r\n### Attachments ###\r\n\r\nAttachments are currently file based only, with future plans for an in memory implementation as well.\r\n\r\nFile attachments are limited to 7 MB per file.\r\n\r\n```php\r\n$mail = new SendGrid\\Mail();\r\n$mail->addTo('foo@bar.com')->\r\n       ...\r\n       addAttachment(\"../path/to/file.txt\");    \r\n```\r\n\r\n**Important Gotcha**: `setBcc` is not supported with attachments. This is by design. Instead use multiple `addTo`s. Each user will receive their own personalized email with that setup, and only see their own email.\r\n\r\n### Bcc\r\n\r\nUse multiple `addTo`s as a superior alternative to `setBcc`.\r\n\r\n```php\r\n$mail = new SendGrid\\Mail();\r\n$mail->addTo('foo@bar.com')->\r\n       addTo('someotheraddress@bar.com')->\r\n       addTo('another@another.com')->\r\n       ...\r\n```\r\n\r\nStandard `setBcc` will hide who the email is addressed to. If you use the multiple addTo, each user will receive a personalized email showing **only* their email. This is more friendly and more personal. Additionally, it is a good idea to use multiple `addTo`s because setBcc is not supported with attachments. This is by design.\r\n\r\nSo just remember, when thinking 'bcc', instead use multiple `addTo`s.\r\n\r\n### From-Name and Reply-To\r\n\r\nThere are two handy helper methods for setting the From-Name and Reply-To for a\r\nmessage\r\n\r\n```php\r\n$mail = new SendGrid\\Mail();\r\n$mail->addTo('foo@bar.com')->\r\n       setReplyTo('someone.else@example.com')->\r\n       setFromName('John Doe')->\r\n       ...\r\n```\r\n\r\n### Substitutions ###\r\n\r\nSubstitutions can be used to customize multi-recipient emails, and tailor them for the user\r\n\r\n```php\r\n$mail = new SendGrid\\Mail();\r\n$mail->addTo('john@somewhere.com')->\r\n       addTo(\"harry@somewhere.com\")->\r\n       addTo(\"Bob@somewhere.com\")->\r\n       ...\r\n       setHtml(\"Hey %name%, we've seen that you've been gone for a while\")->\r\n       addSubstitution(\"%name%\", array(\"John\", \"Harry\", \"Bob\"));\r\n```\r\n\r\n### Sections ###\r\n\r\nSections can be used to further customize messages for the end users. A section is only useful in conjunction with a substition value.\r\n\r\n```php\r\n$mail = new SendGrid\\Mail();\r\n$mail->addTo('john@somewhere.com')->\r\n       addTo(\"harry@somewhere.com\")->\r\n       addTo(\"Bob@somewhere.com\")->\r\n       ...\r\n       setHtml(\"Hey %name%, you work at %place%\")->\r\n       addSubstitution(\"%name%\", array(\"John\", \"Harry\", \"Bob\"))->\r\n       addSubstitution(\"%place%\", array(\"%office%\", \"%office%\", \"%home%\"))->\r\n       addSection(\"%office%\", \"an office\")->\r\n       addSection(\"%home%\", \"your house\");\r\n```\r\n\r\n### Unique Arguments ###\r\n\r\nUnique Arguments are used for tracking purposes\r\n\r\n```php\r\n$mail = new SendGrid\\Mail();\r\n$mail->addTo('foo@bar.com')->\r\n       ...\r\n       addUniqueArgument(\"Customer\", \"Someone\")->\r\n       addUniqueArgument(\"location\", \"Somewhere\");\r\n```\r\n\r\n### Filter Settings ###\r\n\r\nFilter Settings are used to enable and disable apps, and to pass parameters to those apps.\r\n\r\n```php\r\n$mail = new SendGrid\\Mail();\r\n$mail->addTo('foo@bar.com')->\r\n       ...\r\n       addFilterSetting(\"gravatar\", \"enable\", 1)->\r\n       addFilterSetting(\"footer\", \"enable\", 1)->\r\n       addFilterSetting(\"footer\", \"text/plain\", \"Here is a plain text footer\")->\r\n       addFilterSetting(\"footer\", \"text/html\", \"<p style='color:red;'>Here is an HTML footer</p>\");\r\n```\r\n\r\n### Headers ###\r\n\r\nHeaders can be used to add existing sendgrid functionality (such as for categories or filters), or custom headers can be added as necessary.\r\n\r\n```php\r\n$mail = new SendGrid\\Mail();\r\n$mail->addTo('foo@bar.com')->\r\n       ...\r\n       addHeader(\"category\", \"My New Category\");\r\n```\r\n\r\n## Contributing\r\n\r\n1. Fork it\r\n2. Create your feature branch (`git checkout -b my-new-feature`)\r\n3. Commit your changes (`git commit -am 'Added some feature'`)\r\n4. Push to the branch (`git push origin my-new-feature`)\r\n5. Create new Pull Request\r\n\r\n## Running Tests ##\r\n\r\nThe existing tests in the `Test` directory can be run using [PHPUnit](https://github.com/sebastianbergmann/phpunit/) with the following command:\r\n\r\n````bash\r\ncomposer update --dev\r\nvendor/bin/phpunit Test/\r\n```\r\n\r\nor if you already have PHPUnit installed globally.\r\n\r\n```bash\r\nphpunit Test/\r\n```\r\n\r\n## Known Issues\r\n\r\n* When using the smtp version (which is built on top of swiftmailer), any FROM names with parentheses will have the content of the parentheses stripped out. If this happens please use the web version of the library. Read more about this in [issue #27](https://github.com/sendgrid/sendgrid-php/issues/27).\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}